# always load the reset file first
# source-file ~/.tmux.reset.conf

set -g history-limit 50000

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and -, new panes are same directory
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind '%'

# Enable Mouse Scrolling
setw -g mouse on

# 0 is too far from ` ;)
set -g base-index 1
setw -g pane-base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
# setw -g monitor-activity on

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi M-Left select-pane -L
bind-key -T copy-mode-vi M-Down select-pane -D
bind-key -T copy-mode-vi M-Up select-pane -U
bind-key -T copy-mode-vi M-Right select-pane -R
#bind-key -T copy-mode-vi C-\\ select-pane -l

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

#Alt-Number to switch windows
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :0

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# Status bar options
set-option -g status-position top
set-window-option -g window-status-style "fg=white,bg=default"
set-window-option -g window-status-format '#I:#{=15:window_name}'
set-window-option -g window-status-current-style "fg=black,bg=white"
set-window-option -g window-status-current-format '#I:#{=15:window_name}'
set-window-option -g window-status-separator '|'
set-option -g message-style 'fg=default,bg=default'
set-option -g message-command-style 'fg=default,bg=default'
set -g status-style bg=default
set -g status-left ""
set -g status-right " %H:%M %d-%b-%y"
# set -g status off

# Use system clipboard
run-shell ~/.tmux/tmux-yank/yank.tmux

# Vim-tmux focus-events
set -g focus-events on

# Don't show statusline if only single window
if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

set -g default-terminal "screen-256color"
